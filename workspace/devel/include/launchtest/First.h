// Generated by gencpp from file launchtest/First.msg
// DO NOT EDIT!


#ifndef LAUNCHTEST_MESSAGE_FIRST_H
#define LAUNCHTEST_MESSAGE_FIRST_H

#include <ros/service_traits.h>


#include <launchtest/FirstRequest.h>
#include <launchtest/FirstResponse.h>


namespace launchtest
{

struct First
{

typedef FirstRequest Request;
typedef FirstResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct First
} // namespace launchtest


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::launchtest::First > {
  static const char* value()
  {
    return "248a70f7fd02964b38f41b93425df109";
  }

  static const char* value(const ::launchtest::First&) { return value(); }
};

template<>
struct DataType< ::launchtest::First > {
  static const char* value()
  {
    return "launchtest/First";
  }

  static const char* value(const ::launchtest::First&) { return value(); }
};


// service_traits::MD5Sum< ::launchtest::FirstRequest> should match
// service_traits::MD5Sum< ::launchtest::First >
template<>
struct MD5Sum< ::launchtest::FirstRequest>
{
  static const char* value()
  {
    return MD5Sum< ::launchtest::First >::value();
  }
  static const char* value(const ::launchtest::FirstRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::launchtest::FirstRequest> should match
// service_traits::DataType< ::launchtest::First >
template<>
struct DataType< ::launchtest::FirstRequest>
{
  static const char* value()
  {
    return DataType< ::launchtest::First >::value();
  }
  static const char* value(const ::launchtest::FirstRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::launchtest::FirstResponse> should match
// service_traits::MD5Sum< ::launchtest::First >
template<>
struct MD5Sum< ::launchtest::FirstResponse>
{
  static const char* value()
  {
    return MD5Sum< ::launchtest::First >::value();
  }
  static const char* value(const ::launchtest::FirstResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::launchtest::FirstResponse> should match
// service_traits::DataType< ::launchtest::First >
template<>
struct DataType< ::launchtest::FirstResponse>
{
  static const char* value()
  {
    return DataType< ::launchtest::First >::value();
  }
  static const char* value(const ::launchtest::FirstResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LAUNCHTEST_MESSAGE_FIRST_H
